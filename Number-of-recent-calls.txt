//using the queue we can solve this 

///ik how this works but idk why this works 

import java.util.LinkedList;
import java.util.Queue;

public class RecentCounter {
    private Queue<Integer> queue;

    // Constructor
    public RecentCounter() {
        queue = new LinkedList<>();
    }

    // Method to process a ping request at time t
    public int ping(int t) {
        queue.offer(t); // Add the new request time to the queue

        // Remove requests that are older than 3000 milliseconds
        while (queue.peek() < t - 3000) {
            queue.poll();
        }

        return queue.size(); // Return the number of requests in the last 3000 milliseconds
    }
}

// Test the RecentCounter class
class Main {
    public static void main(String[] args) {
        RecentCounter recentCounter = new RecentCounter();
        System.out.println(recentCounter.ping(1));    // Output: 1
        System.out.println(recentCounter.ping(100));  // Output: 2
        System.out.println(recentCounter.ping(3001)); // Output: 3
        System.out.println(recentCounter.ping(3002)); // Output: 3
    }
}
