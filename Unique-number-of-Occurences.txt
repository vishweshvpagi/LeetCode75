//using a hashmap to store the keys and their rrespective occureneces in first loop and adding them to the hashmap. LAter chacking to see if it is unique using set properties. ANd the problem is solved.

Map<Integer, Integer> frequencyMap = new HashMap<>();
        for (int num : arr) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        // Step 2: Check if the frequencies are unique
        Set<Integer> frequencySet = new HashSet<>();
        for (int freq : frequencyMap.values()) {
            if (!frequencySet.add(freq)) {
                // If the frequency is already in the set, return false
                return false;
            }
        }

        // If all frequencies are unique, return true
        return true;


//Best solution. IDK how it works
class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        int[] arr1 = new int[2001];
        int[] arr2 = new int[arr.length + 1];

        for (int i : arr){
                arr1[1000 + i]++;
        }

        for(int i : arr){
            if (arr1[i + 1000] == 0) continue;
            if (arr2[arr1[i + 1000]]++ == 1) return false;
            arr1[i + 1000] = 0;
        }
        return true;
    }
}