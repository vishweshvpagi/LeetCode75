import java.util.Stack;

class Solution {
    public String removeStars(String s) {
        Stack<Character> stk = new Stack<>();
        
        for (char c : s.toCharArray()) {
            if (c == '*') {
                if (!stk.isEmpty()) {
                    stk.pop(); // Remove the character before the '*' 
                }
            } else {
                stk.push(c); // Add other characters to the stack
            }
        }
        
        // Convert the stack to a string
        StringBuilder sb = new StringBuilder();
        while (!stk.isEmpty()) {
            sb.insert(0, stk.pop()); // Insert characters from stack into the StringBuilder
        }
        
        return sb.toString(); // Return the result as a string
    }
}
//best approach
class Solution {
    public String removeStars(String s) {
        int len = s.length();
        byte[] res = new byte[len];
        s.getBytes(0,len,res,0);

        int countStars = 0;
        for(int i = 0; i<len; i++)
        {
            if(res[i] == '*') countStars++;
            else res[i-countStars*2] = res[i];
        }
        
        return new String(res, 0, len-countStars*2);
    }
}